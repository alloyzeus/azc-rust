package {{.pkg_name}}server

import (
	{{.base.azcore_pkg}} "{{.base.azcore_import}}"

	"{{.pkg_path}}"
)

// {{.service_name}}Server is the server
// implementation for {{.service_name}}.
type {{.service_name}}Server struct {
	*{{.pkg_name}}.{{.base.azlib_prefix}}EntityServiceServerBase

	// Embed shared service implementation.
	{{.pkg_name}}.{{.service_name}}Base

	//TODO: implement this.
}

var _ {{.pkg_name}}.{{.service_name}} = &{{.service_name}}Server{}
var _ {{.base.azcore_pkg}}.EntityServiceServer = &{{.service_name}}Server{}

// Observe{{.type_name}}Events subscribes to {{.type_name}}-related events.
//
// This method enforces full access control as it was designed to be called
// from the inter-process API layer. For the intra-process version,
// see Observe{{.type_name}}EventsInternal.
func (srv *{{.service_name}}Server) Observe{{.type_name}}Events(
	input {{.pkg_name}}.{{.type_name}}EventsObserveInput,
) {{.pkg_name}}.{{.type_name}}EventsObserveOutput {
	//TODO
	return {{.pkg_name}}.{{.type_name}}EventsObserveOutput{}
}

{{if .creation.allow_cross_process_callers -}}

// Create{{.type_name}} creates a new {{.type_name}}.
//
// This method enforces full access control as it was designed to be called
// from the inter-process API layer. For the intra-process version,
// see Create{{.type_name}}Internal.
func (srv *{{.service_name}}Server) Create{{.type_name}}(
	input {{.pkg_name}}.{{.type_name}}CreateRequest,
) {{.pkg_name}}.{{.type_name}}CreateResponse {
	//TODO: access control. after it's been cleared, continue with internal.

	return srv.Create{{.type_name}}Internal(input)
}

type {{.type_name}}CreateRequest = {{.pkg_name}}.{{.type_name}}CreateRequest
type {{.type_name}}CreateRequestParameters = {{.pkg_name}}.{{.type_name}}CreateRequestParameters

type {{.type_name}}CreateResponse = {{.pkg_name}}.{{.type_name}}CreateResponse
type {{.type_name}}CreateResponseParameters = {{.pkg_name}}.{{.type_name}}CreateResponseParameters

{{else -}}

// {{.type_name}}CreateRequest is for use in Create{{.type_name}} method of {{.service_name}}.
type {{.type_name}}CreateRequest struct {
	Context {{.pkg_name}}.{{.base.azlib_prefix}}EntityCreationRequestContext
	Parameters {{.type_name}}CreateRequestParameters
}

type {{.type_name}}CreateRequestParameters struct {
	// TODO
}

type {{.type_name}}CreateResponse struct {
	Context {{.pkg_name}}.{{.base.azlib_prefix}}EntityCreationResponseContext
	Parameters {{.type_name}}CreateResponseParameters
}

type {{.type_name}}CreateResponseParameters struct {
	RefKey {{.pkg_name}}.{{.ref_key_type_name}}
	CreationInfo *{{.pkg_name}}.{{.base.azlib_prefix}}EntityCreationInfo

	// TODO
}

{{end -}}

// Create{{.type_name}}Internal is for intra-process. It doesn't enforce any
// access control.
//
//TODO: create internal input-output as the non-internal might be not available.
func (srv *{{.service_name}}Server) Create{{.type_name}}Internal(
	input {{.type_name}}CreateRequest,
) {{.type_name}}CreateResponse {
	//TODO
	return {{.type_name}}CreateResponse{}

	// return {{.type_name}}CreateResponseWithError(
	//	input.{{.type_name}}CreateRequestContext(),
	//	{{.base.azcore_pkg}}.ErrMethodNotImplemented,
	//)
}

// instantiate{{.type_name}}

// new{{.id_num_type_name}} generates a new IDNum which can be assigned
// to a new entity.
func (srv *{{.service_name}}Server) new{{.id_num_type_name}}() ({{.pkg_name}}.{{.id_num_type_name}}, error) {
	//TODO
	return {{.pkg_name}}.{{.id_num_type_name}}Zero, nil
}
