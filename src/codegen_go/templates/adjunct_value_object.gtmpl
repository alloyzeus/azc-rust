package {{.pkg_name}}

import (
	{{.base.azcore_pkg}} "{{.base.azcore_import}}"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = {{.base.azcore_pkg}}.{{.base.azcore_version}}

{{range .type_doc_lines -}}
{{if .}}// {{.}}{{else}}//{{end}}
{{end -}}
type {{.type_name}} struct {
	{{range .hosts -}}
	{{unexported_field .}} {{.}}RefKey
	{{end -}}

	data {{.type_name}}Data
}

type {{.type_name}}Data struct {
	{{.primitive_type_name}}
}

type {{.type_name}}Service interface {
	// Get{{.type_name}}Data returns nil if there's no such
	// {{.type_name}} for given hosts.
	//
	// Returns a new instance for each call.
	//
	// non-mutating method
	Get{{.type_name}}Data(
		callCtx CallContext,
		{{- range .hosts}}
		{{unexported_field .}} {{.}}RefKey,
		{{- end}}
	) (*{{.type_name}}Data, error)

	// mutating method
	Set{{.type_name}}Data(
		callCtx CallContext,
		{{- range .hosts}}
		{{unexported_field .}} {{.}}RefKey,
		{{- end}}
		data {{.type_name}}Data,
	) (recordMutated bool, err error) //TODO: result type: does nothing, changed something. revision number.

	// mutating method
	Clear{{.type_name}}Data(
		callCtx CallContext,
		{{- range .hosts}}
		{{unexported_field .}} {{.}}RefKey,
		{{- end}}
	) (recordMutated bool, err error) //TODO: result type: does nothing, changed something. revision number.
}
