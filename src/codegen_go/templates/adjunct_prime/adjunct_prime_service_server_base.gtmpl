package {{.pkg_name}}server

import (
	"crypto/rand"
	"database/sql"
	"encoding/binary"

	{{.base.azerrs_pkg}} "{{.base.azerrs_import}}"

	"{{.pkg_path}}"
)

// {{.server_name}} is the server-side
// base implementation of {{.service_name}}.
type {{.server_name}} struct {
	core       *ServerCore
	db         *sql.DB
	readOnlyDB *sql.DB
}

// delete{{.type_name}}Insecure deassociate any prime adjunct
// {{.type_name}} from its host(s).
//
// Note that this method, which suffixed with 'Insecure', doesn't check
// permissions and rules.
func (srv *{{.server_name}}) delete{{.type_name}}Insecure(
	ctx {{.base.service_op_call_context_type_name}},
	{{- range .hosts}}
	{{arg_name .id_name}} {{.type_name_with_pkg}}ID,
	{{- end}}
) (justDeleted bool, err error) {
	callMD := {{.base.iam_pkg}}.CallMetadataOf(ctx)
	if callMD == nil {
		return false, {{.base.iam_pkg}}.ErrCallMetadataContextNotFound
	}
	if err := callMD.ContextError(); err != nil {
		return false, err
	}
	callAuth := callMD.Authorization()
	callTS := callMD.ReceiveTime()

	sqlString, _, _ := goqu.
		Update({{unexported_field .type_name}}DBTableName).
		Where(
	        {{- range .hosts}}
			goqu.C({{unexported_field $.type_name}}DBCol{{.id_name}}).Eq(azIDToSQLValue({{arg_name .id_name}})),
            {{- end}}
			goqu.C({{unexported_field .type_name}}DBColMDDeletionTimestamp).IsNull(),
		).
		Set(
			goqu.Record{
				{{unexported_field .type_name}}DBColMDDeletionTimestamp:  callTS,
				{{unexported_field .type_name}}DBColMDDeletionUserID: azIDToSQLValue(callAuth.UserID()),
				{{unexported_field .type_name}}DBColMDDeletionTerminalID: azIDToSQLValue(callAuth.TerminalID()),
			},
		).
		ToSQL()

	xres, err := srv.db.Exec(sqlString)
	if err != nil {
		return false, {{.base.azerrs_pkg}}.Op("Exec", err)
	}

	var n int64
	n, err = xres.RowsAffected()
	if err != nil {
		return false, {{.base.azerrs_pkg}}.Op("RowsAffected", err)
	}
	return n == 1, nil
}

// ----

const (
	{{unexported_field .type_name}}DBTableName = "{{.type_name_snake}}_dt"

	// Creation metadata (MD) columns
	{{unexported_field .type_name}}DBColMDCreationTimestamp  = "md_cr_ts"
	{{unexported_field .type_name}}DBColMDCreationTerminalID = "md_cr_tid"
	{{unexported_field .type_name}}DBColMDCreationUserID     = "md_cr_uid"
	// Deletion metadata (MD) columns
	{{unexported_field .type_name}}DBColMDDeletionTimestamp  = "md_del_ts"
	{{unexported_field .type_name}}DBColMDDeletionTerminalID = "md_del_tid"
	{{unexported_field .type_name}}DBColMDDeletionUserID     = "md_del_uid"

	// Identity (hosts, and own, if any)
	{{range .hosts -}}
	{{unexported_field $.type_name}}DBCol{{.id_name}} = "{{.db_col_name}}"
	{{- end}}
)
